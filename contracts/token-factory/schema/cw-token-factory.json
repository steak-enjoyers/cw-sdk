{
  "contract_name": "cw-token-factory",
  "contract_version": "0.0.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "bank",
      "owner"
    ],
    "properties": {
      "bank": {
        "description": "Address of the bank contract.",
        "type": "string"
      },
      "owner": {
        "description": "The contract's owner",
        "type": "string"
      },
      "token_creation_fee": {
        "description": "An optional fee for creating new denoms. Set to `None` to make it free.",
        "anyOf": [
          {
            "$ref": "#/definitions/Coin"
          },
          {
            "type": "null"
          }
        ]
      }
    },
    "additionalProperties": false,
    "definitions": {
      "Coin": {
        "type": "object",
        "required": [
          "amount",
          "denom"
        ],
        "properties": {
          "amount": {
            "$ref": "#/definitions/Uint128"
          },
          "denom": {
            "type": "string"
          }
        }
      },
      "Uint128": {
        "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
        "type": "string"
      }
    }
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "description": "Update the fee for creating new denoms. Only callable by the owner.",
        "type": "object",
        "required": [
          "update_fee"
        ],
        "properties": {
          "update_fee": {
            "type": "object",
            "properties": {
              "token_creation_fee": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Coin"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Withdraw fees collected in the contract. Only callable by the owner.",
        "type": "object",
        "required": [
          "withdraw_fee"
        ],
        "properties": {
          "withdraw_fee": {
            "type": "object",
            "properties": {
              "to": {
                "description": "Address to which the fees are to be sent. Default to the owner if not provided.",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Create a new token with the given nonce. If there is a token creation fee, the message must include sufficient amount of coins.",
        "type": "object",
        "required": [
          "create_token"
        ],
        "properties": {
          "create_token": {
            "type": "object",
            "required": [
              "admin",
              "nonce"
            ],
            "properties": {
              "admin": {
                "description": "We require that the admin must be specified during token creation. It doesn't make sense to create a token with no admin, because then no one would be able to ever mint it. However, the admin can be set to `None` later.",
                "type": "string"
              },
              "after_transfer_hook": {
                "description": "See the comments on `TokenConfig` on what this hook is.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "nonce": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Update a token's configuration. Only callable by the token's current admin.",
        "type": "object",
        "required": [
          "update_token"
        ],
        "properties": {
          "update_token": {
            "$ref": "#/definitions/UpdateTokenMsg"
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Mint new tokens to the designated account. Only callable by the token's admin.",
        "type": "object",
        "required": [
          "mint"
        ],
        "properties": {
          "mint": {
            "type": "object",
            "required": [
              "amount",
              "denom",
              "to"
            ],
            "properties": {
              "amount": {
                "$ref": "#/definitions/Uint128"
              },
              "denom": {
                "type": "string"
              },
              "to": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Burn tokens from from designated account's balance. Only callable by the token's admin.",
        "type": "object",
        "required": [
          "burn"
        ],
        "properties": {
          "burn": {
            "type": "object",
            "required": [
              "amount",
              "denom",
              "from"
            ],
            "properties": {
              "amount": {
                "$ref": "#/definitions/Uint128"
              },
              "denom": {
                "type": "string"
              },
              "from": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Forcibly transfer tokens between two accounts. Only callable by the token's admin.",
        "type": "object",
        "required": [
          "force_transfer"
        ],
        "properties": {
          "force_transfer": {
            "type": "object",
            "required": [
              "amount",
              "denom",
              "from",
              "to"
            ],
            "properties": {
              "amount": {
                "$ref": "#/definitions/Uint128"
              },
              "denom": {
                "type": "string"
              },
              "from": {
                "type": "string"
              },
              "to": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Invoked every time a token is transferred. Only callable by the bank contract.",
        "type": "object",
        "required": [
          "after_transfer"
        ],
        "properties": {
          "after_transfer": {
            "type": "object",
            "required": [
              "amount",
              "denom",
              "from",
              "to"
            ],
            "properties": {
              "amount": {
                "$ref": "#/definitions/Uint128"
              },
              "denom": {
                "type": "string"
              },
              "from": {
                "type": "string"
              },
              "to": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Coin": {
        "type": "object",
        "required": [
          "amount",
          "denom"
        ],
        "properties": {
          "amount": {
            "$ref": "#/definitions/Uint128"
          },
          "denom": {
            "type": "string"
          }
        }
      },
      "Uint128": {
        "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
        "type": "string"
      },
      "UpdateTokenMsg": {
        "type": "object",
        "required": [
          "denom"
        ],
        "properties": {
          "admin": {
            "type": [
              "string",
              "null"
            ]
          },
          "after_transfer_hook": {
            "type": [
              "string",
              "null"
            ]
          },
          "denom": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "description": "Query the contract's configurations",
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Query the configuration of a single token by denom",
        "type": "object",
        "required": [
          "token"
        ],
        "properties": {
          "token": {
            "type": "object",
            "required": [
              "denom"
            ],
            "properties": {
              "denom": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Enumerate the config of all tokens",
        "type": "object",
        "required": [
          "tokens"
        ],
        "properties": {
          "tokens": {
            "type": "object",
            "properties": {
              "limit": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "start_after": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "config": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Config_for_String",
      "type": "object",
      "required": [
        "bank",
        "owner"
      ],
      "properties": {
        "bank": {
          "description": "Address of the bank contract.",
          "type": "string"
        },
        "owner": {
          "description": "The contract's owner",
          "type": "string"
        },
        "token_creation_fee": {
          "description": "An optional fee for creating new denoms. Set to `None` to make it free.",
          "anyOf": [
            {
              "$ref": "#/definitions/Coin"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Coin": {
          "type": "object",
          "required": [
            "amount",
            "denom"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "denom": {
              "type": "string"
            }
          }
        },
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "token": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UpdateTokenMsg",
      "type": "object",
      "required": [
        "denom"
      ],
      "properties": {
        "admin": {
          "type": [
            "string",
            "null"
          ]
        },
        "after_transfer_hook": {
          "type": [
            "string",
            "null"
          ]
        },
        "denom": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "tokens": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_UpdateTokenMsg",
      "type": "array",
      "items": {
        "$ref": "#/definitions/UpdateTokenMsg"
      },
      "definitions": {
        "UpdateTokenMsg": {
          "type": "object",
          "required": [
            "denom"
          ],
          "properties": {
            "admin": {
              "type": [
                "string",
                "null"
              ]
            },
            "after_transfer_hook": {
              "type": [
                "string",
                "null"
              ]
            },
            "denom": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      }
    }
  }
}
